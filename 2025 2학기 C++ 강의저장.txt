//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt" };

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}=======================================
저장시간 - //-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	out << "=======================================" << '\n';
	out << "저장시간 - ";
	auto 현재시각 = std::chrono::system_clock::now();
	std::cout << std::chrono::system_clock::to_time_t(현재시각) << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}===============================================
저장시간 - 2025-09-03 07:00:30.5691656
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	out << "===============================================" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() << '\n';
	out << "===============================================" << '\n';
	out << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}

===============================================
저장시간 - 2025-09-03 16:03:41.6669912
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의소개, 맘이 없으면 얼른 변경하자. 공부하고 싶을때 하자
// ----------------------------------------------------------------------------------------------------------
// 컴파일 환경 - 버전 17.14.13 (August 2025)
// 프로젝트 환경 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest)
//				 - C++ = SDL 검사 - 아니요
// 타겟 환경 - Release / x64
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>

int main()
{
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ "main.cpp" };		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	using namespace std::chrono_literals;
	out << '\n';
	out << "===============================================" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() + 9h << '\n';
	out << "===============================================" << '\n';
	out << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}2570===============================================
저장시간 - 2025-09-03 16:20:56.9440232
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:23:49.8666555
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:23:49.8677808
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:23:49.8683715
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:26:36.4215716
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#pragma once
#include <string_view>

// 함수의 원형을 여기에 적는다 - 함수 선언(function declaration)
void save(std::string_view);
2570===============================================
저장시간 - 2025-09-03 16:26:36.4306595
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#include "save.h"
#include <string_view>
#include <fstream>
#include <chrono>
#include <iostream>

// coding convention을 알아보자 (낙타 스타일, 뱀 스타일)
void save( std::string_view fileName )
{
	std::cout << "\"" << fileName << "\"을 저장함" << '\n';
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ fileName.data()};		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	using namespace std::chrono_literals;
	out << '\n\n';
	out << "===============================================" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() + 9h << '\n';
	out << "===============================================" << '\n';
	out << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}
2570===============================================
저장시간 - 2025-09-03 16:26:36.4319597
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:26:54.5592712
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#pragma once
#include <string_view>

// 함수의 원형을 여기에 적는다 - 함수 선언(function declaration)
void save(std::string_view);
2570===============================================
저장시간 - 2025-09-03 16:26:54.5685824
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#include "save.h"
#include <string_view>
#include <fstream>
#include <chrono>
#include <iostream>

// coding convention을 알아보자 (낙타 스타일, 뱀 스타일)
void save( std::string_view fileName )
{
	std::cout << "\"" << fileName << "\"를 저장함" << '\n';
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ fileName.data()};		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	using namespace std::chrono_literals;
	out << '\n\n';
	out << "===============================================" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() + 9h << '\n';
	out << "===============================================" << '\n';
	out << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}
2570===============================================
저장시간 - 2025-09-03 16:26:54.5699217
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:29:40.4655848
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#pragma once
#include <string_view>

// 함수의 원형을 여기에 적는다 - 함수 선언(function declaration)
void save(std::string_view);
2570===============================================
저장시간 - 2025-09-03 16:29:40.4664802
===============================================

//--------------------------------------------------------------------
// 한학기 강의를 저장하기 위한 함수 save
//--------------------------------------------------------------------
#include "save.h"
#include <string_view>
#include <fstream>
#include <chrono>
#include <iostream>

// coding convention을 알아보자 (낙타 스타일, 뱀 스타일)
void save( std::string_view fileName )
{
	std::cout << "\"" << fileName << "\"를 저장함" << '\n';
	//main.cpp의 내용을 읽어 파일에 기록할거다.
	std::ifstream in{ fileName.data()};		// 'ifstream' 자체가 하나의 자료형.
	in >> std::noskipws;

	// 저장할 파일을 미리 열어 둔다.
	std::ofstream out{ "2025 2학기 C++ 강의저장.txt", std::ios::app };

	//파일에 저장한 시간을 기록하자.
	using namespace std::chrono_literals;
	out << '\n\n';
	out << "===============================================" << '\n';
	out << "저장시간 - " << std::chrono::system_clock::now() + 9h << '\n';
	out << "===============================================" << '\n';
	out << '\n';

	char c;						// 한 글자를 저장할 수 있는 메모리를 만든다.
	while (in >> c)				// 읽을 글자가 있는 동안 읽어서 c에 저장한다.
		out << c;				// out과 연결된 파일에 c로 읽어 온 글자를 출력(저장)한다.
}
2570===============================================
저장시간 - 2025-09-03 16:29:40.4678256
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// 강의저장 기능을 다른 파일로 분리한다.
// 저장하고 싶을 때 마다 함수를 불러 파일을 저장하도록 한다.
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <chrono>
#include "save.h"

//--------
int main()
//--------
{
	std::cout << "이제 강의 준비가 다 되었다" << '\n';

	save("save.h");
	save("save.cpp");
	save("main.cpp");
}2570===============================================
저장시간 - 2025-09-03 16:44:15.1248879
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.

//--------
int main()
//--------
{
	// C++ 프로그램은 프로그램이 시작하면 입출력을 하기 위한 객체
	// cout(모니터), cin(키보드), cerr(모니터), clog(모니터)를 자동생성한다.
	std::cout << "이름을 알려주세요 : ";
	std::string name;
	std::cin >> name;

	// 환영 메시지를 출력하라.
	std::cout << name << "님 환영합니다!" << '\n';

	save("main.cpp");
	
	}
2570===============================================
저장시간 - 2025-09-03 16:46:33.5979907
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 3 수요일                                             (1주 2일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.

//--------
int main()
//--------
{
	// C++ 프로그램은 프로그램이 시작하면 입출력을 하기 위한 객체
	// cout(모니터), cin(키보드), cerr(모니터), clog(모니터)를 자동생성한다.
	std::cout << "이름을 알려주세요 : ";
	std::string name;
	std::cin >> name;

	// 환영 메시지를 10번 출력하라.
	for (int i = 0; i < 10; ++i) {
		std::cout << name << "님 환영합니다!" << '\n';
	}

	save("main.cpp");
	
}
===============================================
저장시간 - 2025-09-08 13:56:51.2485873
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 = 7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::cout << dan << " x " << i + 1 << " = " << dan * (i + 1) << '\n';
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 13:59:04.7247694
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 = 7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		printf("%d x %d = %d\n", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:00:17.8058189
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 = 7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{} x {} = {}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:01:02.8087862
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{0} x {1} = {2}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:01:23.0215208
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{1} x {0} = {2}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:02:05.6954646
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{1} x {0} = {2:2d}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:02:29.6514958
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{1} x {0} = {2:10}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:03:09.9628282
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{1:^40} x {0} = {2:10}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}2570===============================================
저장시간 - 2025-09-08 14:03:54.7066486
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 이름을 입력받아 환영한다고 출력하자.
// [문제] 구구단을 출력하자.
// 몇 단을 원하는 지 물어 봐서 다음과 같은 형식으로 화면 출력하라.
// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "몇 단 ? ";
	int dan;
	std::cin >> dan;
	std::cout << dan << "단을 출력합니다" << '\n';

	for (int i = 0; i < 9; ++i) {
		std::println("{} x {} = {:2}", dan, i + 1, dan * (i + 1));
	}

	save("main.cpp");
	
}===============================================
저장시간 - 2025-09-08 14:09:16.2065538
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 구구단 전체를 출력하는 코드를 답지에 써라.
// 줄 맞춰 출력하라.

// 2 x 1 =  2 

// 단과 단은 한 줄 떼서 구분하라

// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "구구단을 출력합니다" << "\n\n";

	for (int j = 0; j < 9; ++j) {
		for (int i = 0; i < 9; ++i) {
			std::println("{} x {} = {:2}", j + 1, i + 1, (j + 1) * (i + 1));
		}
		std::cout << '\n';
	}

	save("main.cpp");
	
}

===============================================
저장시간 - 2025-09-08 14:13:28.9198456
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 구구단 전체를 출력하는 코드를 답지에 써라.
// 줄 맞춰 출력하라.

// 2 x 1 =  2 

// 단과 단은 한 줄 떼서 구분하라

// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "구구단을 출력합니다" << "\n\n";

	for (int j = 0; j < 9; ++j) {
		for (int i = 0; i < 9; ++i) {
			std::println("{} x {} = {:2}", j + 1, i + 1, (j + 1) * (i + 1));
		}
		std::cout << '\n';
	}

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:19:36.7737402
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// C++ I/O
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include "save.h"

// [문제] 구구단 전체를 출력하는 코드를 답지에 써라.
// 줄 맞춰 출력하라.

// 2 x 1 =  2 

// 단과 단은 한 줄 떼서 구분하라

// 7 x 1 =  7
// 7 x 2 = 14
// 7 x 9 = 63

//--------
int main()
//--------
{
	std::cout << "구구단을 출력합니다" << "\n\n";

	for (int j = 0; j < 8; ++j) {
		for (int i = 0; i < 9; ++i) {
			std::println("{} x {} = {:2}", j + 2, i + 1, (j + 2) * (i + 1));
		}
		std::cout << '\n';
	}

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:22:44.4062439
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	int n = 1234;

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:28:46.9371108
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	int n = 0B01111111'11111111'11111111'11111111;

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:29:21.8623412
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	int n = 0B01111111'11111111'11111111'11111111; // int는 4byte 짜리

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:32:03.6381283
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] unsigned int가 저장할 수 있는 최댓값을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	unsigned int n = 0B11111111'11111111'11111111'11111111;

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:33:09.3757418
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값 + 1을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	int n = 0b01111111'11111111'11111111'11111111;
	n = n + 1;

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:34:34.3353302
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include "save.h"

// [문제] int가 저장할 수 있는 최댓값을 저장하도록 하자.
// 화면에 그 값을 출력하자.

//--------
int main()
//--------
{
	//int n = 0b01111111'11111111'11111111'11111111;
	int n = 0x7F'FF'FF'FF;

	std::cout << "현재 n의 값은 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:40:41.9369011
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int값을 메모리 그대로 이진수로 출력하자.

//--------
int main()
//--------
{
	int n = 0x01'02'03'04;
	// --> 00000001000000100000001100000100

	std::cout << "현재 n의 값은 - " << n << '\n';

	std::bitset<32> bit = n;
	std::cout << "       이진수 - " << bit << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:40:56.0953216
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int값을 메모리 그대로 이진수로 출력하자.

//--------
int main()
//--------
{
	int n = 1024;
	// --> 00000001000000100000001100000100

	std::cout << "현재 n의 값은 - " << n << '\n';

	std::bitset<32> bit = n;
	std::cout << "       이진수 - " << bit << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:41:09.7873843
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int값을 메모리 그대로 이진수로 출력하자.

//--------
int main()
//--------
{
	int n = 1024 * 1024;
	// --> 00000001000000100000001100000100

	std::cout << "현재 n의 값은 - " << n << '\n';

	std::bitset<32> bit = n;
	std::cout << "       이진수 - " << bit << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:41:44.7896864
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int값을 메모리 그대로 이진수로 출력하자.

//--------
int main()
//--------
{
	int n = 1024 * 1024 * 1024;
	// --> 00000001000000100000001100000100

	std::cout << "현재 n의 값은 - " << n << '\n';

	std::bitset<32> bit = n;
	std::cout << "       이진수 - " << bit << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:42:12.1689287
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int값을 메모리 그대로 이진수로 출력하자.

//--------
int main()
//--------
{
	int n = 0x01020304;
	// --> 00000001000000100000001100000100

	std::cout << "현재 n의 값은 - " << n << '\n';

	std::bitset<32> bit = n;
	std::cout << "       이진수 - " << bit << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:48:00.5721056
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include "save.h"

// [문제] int의 최댓값을 저장하고 화면에 출력하라.

//--------
int main()
//--------
{
	int n = 0x7F'FF'FF'FF;

	std::cout << "int의 최댓값 - " << n << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:58:34.9093010
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

// [문제] int의 최댓값을 저장하고 화면에 출력하라.

//--------
int main()
//--------
{
	long long num = 0x7F'FF'FF'FF'FF'FF'FF'FF;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << num << '\n';
	std::cout << std::bitset<64>(num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:59:11.1359809
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << num << '\n';
	std::cout << std::bitset<32>(num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 14:59:44.9611127
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1.234;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << num << '\n';
	std::cout << std::bitset<32>(num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:00:25.1753211
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1.234;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>(num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:00:45.9041458
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1024.333444;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>(num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:01:22.3376665
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1024.333444;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>((long) num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:01:37.5171899
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1024.333;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>((long) num) << '\n';

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:02:42.1988767
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

//--------
int main()
//--------
{
	float num = 1024.333;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>((long) num) << '\n'; // float 메모리 찾아보기

	save("main.cpp");
}

===============================================
저장시간 - 2025-09-08 15:03:43.7851943
===============================================

//-----------------------------------------------------------------------------------------------------------
// 2025 2학기 C++ 월56수78					9. 8 수요일                                             (2주 1일)
//-----------------------------------------------------------------------------------------------------------
// 자료형과 변수
// ----------------------------------------------------------------------------------------------------------

#include <iostream>
#include<bitset>
#include<numeric>
#include "save.h"

// [실습] 다른 기본 자료형을 사용하여 연습하라.

//--------
int main()
//--------
{
	float num = 1024.333;
	//constexpr int n = std::numeric_limit<int>::max();

	std::cout << "float가 차지한 메모리 - " << sizeof num << '\n';
	std::cout << num << '\n';
	std::cout << std::bitset<32>((long) num) << '\n'; // float 메모리 찾아보기

	save("main.cpp");
}